#pragma once

#include <algorithm>
#include <vector>
#include <utility>
#include <stack>
#include <map>

#include "CoreMinimal.h"
#include "GameFramework/Actor.h"
#include "GobangFunction.generated.h"

using std::vector;
using std::pair;
using std::stack;
using std::map;
using std::sort;
using std::max;
using std::min;

UCLASS()
class GOBANG_API AGobangFunction : public AActor {
	GENERATED_BODY()

	vector<vector<int32>> Board{17, vector<int32>(17, 0)};
	stack<pair<int32, int32>> Record;
	int32 Turn = 1;

	vector<vector<int32*>> WinningArray{572, vector<int32*>(5)};
	vector<vector<int32>> IsValid{17, vector<int32>(17, 0)};
	map<int32, pair<pair<int32, int32>, pair<int32, int32>>> WinningArrayDic;
	int32 WinningPosition = 0;

	unsigned long long Key = 13107947371880225101U;
	map<unsigned long long, pair<int32, int32>> Zobrist;
	const std::vector<std::vector<unsigned long long>> Board1 = {{1361309409633275791U, 17981586107897009018U, 4859901727641697834U, 6919813685360767560U, 9554526764046130345U, 11810469517283948400U, 12580130926200224995U, 15905600608917387768U, 6754383205166414253U, 9946944363266344080U, 2701945080321505336U, 5939322070748954898U, 8477463320311100178U, 6452015696338719061U, 10145291228424133728U, 18288581794148908434U, 17479429889134379250U},
		{11966884364849876705U, 2983969699271498977U, 12326223873873743770U, 6372648687825595479U, 18061817387129719886U, 11385466829566790488U, 15460467925958340673U, 11674069650425624667U, 10074862575147544721U, 9330313806085848623U, 6900549554072230151U, 15012995489205958852U, 8308586911924624647U, 6401766214243706326U, 17218945181062521658U, 10072995370587175733U, 15633771637992475171U},
		{7113631308630502501U, 17850139133567975914U, 6657142786647767260U, 3530277452033445758U, 9675178843297224177U, 17976989917183467727U, 13804042349781556337U, 13742643303063536493U, 17782209177172736535U, 9642983869964524814U, 2175402748524110840U, 7005130362858347896U, 12677638997587957160U, 6261403330913335174U, 9969791963375108802U, 4435662516243171645U, 9880422882991177736U},
		{7569479080530409351U, 6060675257266453286U, 12270328396829944180U, 2423470274392324932U, 2919663722279656907U, 17850648483419313206U, 15461057313748868342U, 13603850681671469769U, 14042036137655806314U, 16931010022849567247U, 18374406331465339161U, 2694853234589539827U, 11036402158815133825U, 9637371329691023592U, 3479667456954784819U, 10983608704758607754U, 5672170858499091666U},
		{7536363393123524142U, 4145284912936100989U, 18304733252413308646U, 16320984465865842710U, 10168554873356455373U, 5097065492902039327U, 3778023729642253480U, 16347982742463996335U, 13738831339846161687U, 3205628078488663100U, 114273287097293235U, 9878693681381000215U, 13402798908117539805U, 15040963502895654197U, 9929740799186990772U, 18307839871118540908U, 6124993401843528503U},
		{232145903140009054U, 6885317628184788323U, 12434541645778996802U, 9803002877075538798U, 1888008921756712708U, 16238472824235214282U, 2992997495709548376U, 2259938328351352722U, 5486058264141402019U, 17380521263449099118U, 2344472076420771864U, 15545911982126909873U, 15038925289487006973U, 10977061769960394156U, 2687814814419129267U, 3795982862443974772U, 15822019080069407897U},
		{10719562478239448805U, 1282984689537652669U, 3693999756154397113U, 3401221914434778773U, 10776441652379818804U, 17817310394316342632U, 11427206964549170498U, 13063450131298603061U, 9300178301718278440U, 11267578753276886409U, 9907350622071062053U, 3722646106899273191U, 5453155146744319830U, 9612420610355208577U, 10093698692165450414U, 2351182547081462170U, 18259400721359765960U},
		{1537164277991708988U, 17788515068806946019U, 3845652429461646923U, 9733501161033654373U, 58333914519373750U, 17849151014015504728U, 10775497174146208490U, 6702929222974361819U, 11968154050746322529U, 8460402675354485509U, 13464752100766465658U, 13519133143095893087U, 5579958155345559151U, 4178990213947337450U, 1514018425180257527U, 5019048851580475941U, 2588298033268542512U},
		{13693543332119727951U, 9711834606137981994U, 17341160656561234406U, 834369699000671510U, 8122297616348076881U, 18371932683012977073U, 3624676578706399029U, 1074998836786250737U, 17934699130291249445U, 15386479126547431809U, 8304151650783265908U, 15129967087680240012U, 15862798229383908764U, 11015832529297067605U, 6301512410311453110U, 766236211759399546U, 5022271849733740545U},
		{16486932111423548492U, 9549404171910246140U, 4142825059668584332U, 12398166711047075257U, 14355673958709447711U, 41431880763806170U, 9884758273989930494U, 9682335228785295799U, 1040734642413233191U, 3290796612696306045U, 133585762748504532U, 16830896852605433125U, 9724508823466405134U, 4386911127157773560U, 16370434923990200829U, 12495648108071808799U, 8676206144530110408U},
		{18181680708714625504U, 10182053746409583717U, 5704612736180501254U, 6970380698205335140U, 14737253568202244177U, 9127657742179756779U, 8299683636973656941U, 12559780673286598244U, 8085609209765654502U, 2083441978490973541U, 17249396513642205883U, 7631840019290689814U, 14297278904216676450U, 15889373359240034913U, 15695468001630657406U, 10883793312824456284U, 16391688623357631204U},
		{732347927277798983U, 10026308180602227697U, 7535154825997704051U, 6623991649983484930U, 3396717820551446354U, 8969498397287857351U, 55244697032786542U, 7566782812853621174U, 15485340170746869945U, 16151137399978860721U, 10206357218297102961U, 1323190927762651813U, 3355717015815283043U, 15811816766824325314U, 8615373812963646042U, 8118157575295345245U, 2189182677787486731U},
		{15469829853407389950U, 262866624301028407U, 13712282292698353972U, 1135109764496637789U, 18358696313885298827U, 11181942650016657491U, 8701747789909043667U, 11385400461598185484U, 5521369316125186105U, 11365575825302849568U, 7315595461140030465U, 10525672153665661041U, 12839090597431806983U, 3231359754556317346U, 13617594546669135285U, 5831925290949808735U, 9517790861914398310U},
		{5626983838502579597U, 10742134858524526143U, 9354334450977725805U, 14576723716589590219U, 12655630422747326590U, 17931582778061744353U, 5759838913742920957U, 7280389198103897419U, 10202583593378444376U, 8483102383427701701U, 3388554711137881293U, 9129231329361074596U, 17452875651272965047U, 16767297068940728576U, 3368373852737303370U, 17734534105399968684U, 2073207955822827880U},
		{14803304733578897872U, 228753454131780958U, 1430003658741771344U, 15193188125096746162U, 6529349837401047679U, 13206630404504701749U, 8708422221103931616U, 10452941103247489438U, 17364596090928168006U, 10497245344866976847U, 15059912492589765355U, 2729739956508291036U, 6450403672795190383U, 5346501295285429417U, 10907502740108377012U, 5872011416509205080U, 16328462502160939534U},
		{8495638189258805969U, 3038917731809976143U, 4773300420919982558U, 10272299649148630613U, 15659751150933064419U, 11263042567459456232U, 11897318383237498431U, 12606804055192750473U, 14301571337451374038U, 8979307299935766640U, 3109290753172834384U, 2786105666285816947U, 11155470324596057587U, 3567735362668883201U, 868324263503524966U, 5988285834214487661U, 10614758037308177048U},
		{9285162264381042394U, 14386377746318235943U, 7606328824588939766U, 11784314063341459524U, 1783142561093840854U, 10472382475635285619U, 8424037067292205884U, 7549680110490051582U, 12727769866733929379U, 10126017959163124106U, 2393158594607633106U, 2256862387131498475U, 11716676010789272182U, 5790675330496101936U, 7962494279301203300U, 15828750090342116496U, 9820955766165201625U}
	};
	const std::vector<std::vector<unsigned long long>> Board2 = {{15990030898768913830U, 7191307203987601615U, 14202856296996657352U, 12268408222766948402U, 14098547354208919207U, 9543924398415812345U, 15081869135522304396U, 6531721513973822851U, 11642866971559855098U, 18182752453329886164U, 2174487033114759345U, 3730477871616281865U, 9305123914892168136U, 9561528215025403164U, 2854730397430284545U, 10145258232062870578U, 13923788318719708330U},
		{8913651177671158444U, 4373411115971156011U, 15667017401620351059U, 14024956012216180187U, 13460317206179512693U, 8674168634480019877U, 12430296852231489029U, 5880951774031574387U, 4586871519763845506U, 921181534025082765U, 18371492616391763120U, 12760325554433447545U, 9649343448929148759U, 3551141587884613369U, 3156795632335053754U, 6529441647302177344U, 2514664947025373529U},
		{6307519719175408982U, 14792950506569940910U, 1273608521505450147U, 14520873855641718005U, 5216396083260733511U, 2872512134393015834U, 10249407380053222645U, 8162500856077496971U, 7634697516813710935U, 3251966029668979373U, 3782899644597099743U, 17626775896335265140U, 17365315743846261048U, 475142540489250203U, 7459409283186668181U, 18183589472081135728U, 7059330829937043339U},
		{3809686207996068448U, 8525445231048087039U, 7781520599587672487U, 3476389730023841021U, 13316877361280069362U, 8474986849795306611U, 315123618435117958U, 6274878802958671148U, 1170615949389328318U, 5524058083104233453U, 4128121926193050259U, 15207576136768113170U, 17466404688470190539U, 17025512335085625533U, 2598544381618245953U, 11568508344813801075U, 1377816141148443354U},
		{9650164119221937946U, 118340969722731139U, 14975944438323105806U, 15163848932817161950U, 6216100628764020021U, 10499644227271308956U, 8095613911392848211U, 6261647045752466609U, 16910892095490963527U, 7289675935337419467U, 13224715577095675461U, 3850564163385242551U, 1518133369707909895U, 843353006482984445U, 10015427292684797127U, 11526403542940685960U, 5274316580833972004U},
		{17803434975512457955U, 10012421009375726174U, 14050426769810103709U, 6549514605235467066U, 5206234041163716352U, 10749898797953884954U, 13948430266838520465U, 10441735077048690295U, 1147118265927676074U, 5184538011233302722U, 6232570687656547720U, 658987653732229707U, 4590177676584928509U, 3421760542929757013U, 13954269556460808702U, 9198648488631749550U, 15713627210346577333U},
		{5343316862433733240U, 13378330718080912095U, 16142819288384415087U, 4172603844030897542U, 4422189126822596842U, 14379792166765621980U, 17756294870361739015U, 7954106622726199719U, 3590206287937664520U, 9660243764180437675U, 9946445272436190184U, 6333191556327572372U, 16800158586722551766U, 13916641317768522318U, 5779823833880866047U, 2286163829452072653U, 7787741537156683058U},
		{9525879444485459705U, 2487513480047352169U, 10463113684709590100U, 10902165109505868573U, 6818035990314667651U, 1804945608233430618U, 2713255789023613220U, 15685833481082445978U, 5758704102351738434U, 16665613233314078025U, 13824835833198877633U, 1505703593952509314U, 13166713150520258112U, 6504021783846908056U, 16657166158085048377U, 1172257507867579695U, 9343266670138049328U},
		{13234878894281633811U, 16379502108693982527U, 13001184481914494968U, 10540221995336646101U, 7023240395126053547U, 14176371989245961481U, 5014329928124813889U, 16384815164713326179U, 3085626030079750855U, 18320585783464736191U, 8948575330343859216U, 12505202744369394087U, 16743767125120415198U, 5984461727530517106U, 4593123540345643871U, 1783868876390637678U, 12141628095852667086U},
		{2534394130072522643U, 11513502209579334080U, 15658614040605937868U, 3917537506837261411U, 11497429918941053508U, 2712699854887027443U, 7954557426173635138U, 3521474180128573187U, 7485151044005712272U, 8942920871232000588U, 16032611571284264885U, 16672774551201978867U, 14536853662843482486U, 103464190203496473U, 7353530198730782131U, 8905145790210487473U, 916844908468858492U},
		{9947059449668714493U, 16205887618861664185U, 10113421970943970917U, 17861635849497181697U, 211126607004828568U, 14261576401408265472U, 1116074565317489624U, 8074610768302466720U, 6261514658734514229U, 11378080601754920890U, 14137974802275453141U, 10738028362812359243U, 11633379704184351263U, 15011813569203902071U, 11665168795670307192U, 11168990553799816012U, 17244759220415138629U},
		{14803590213734749977U, 3452691610489420226U, 16196772898428414283U, 2779541700611411576U, 3744707139821181422U, 13208473139046919327U, 18294611834926110324U, 6889001185405029332U, 2145400234106552813U, 12040471266100107694U, 3421875038315632063U, 13803134548328045775U, 3347162801830594768U, 10002656615527119793U, 3768059928286205882U, 14505307313762064417U, 2884471715135320549U},
		{13332941379604641895U, 7099643160491972031U, 10350301900682509706U, 2854773080333761175U, 10887337704967921146U, 14968782470006344437U, 15096711108314750081U, 4910493931410374225U, 16497714834784255973U, 6595408310998344150U, 7015430323745865531U, 16440941511535898324U, 7614493191762940981U, 6278994518913026314U, 484077611659385351U, 5422158640940323036U, 12022301626212282247U},
		{254716483887653531U, 238330573977771559U, 141327981851695105U, 6007085980445691811U, 14709098270914366542U, 9770627907404734628U, 8766201604613132003U, 11175062448147803436U, 2655085921513327522U, 10372849124092910638U, 9077424976478915659U, 13260521506064966956U, 16298313650751125181U, 14477553881967717833U, 6754340596029977738U, 14447543829060991141U, 14944218905702168276U},
		{7026419523790238189U, 7637127280420213948U, 8171249354530903168U, 13870757899376910863U, 8244959061413488569U, 6867350562533400655U, 7148885067261848234U, 1927091571594217547U, 12714874861156240581U, 6053670313571325841U, 5701729849400563212U, 7425690006529638514U, 5318054718934059520U, 16927151022417831214U, 14330656221713755988U, 17340375122237147279U, 10820456951647858841U},
		{14060099389427327460U, 563995029633235363U, 1473872684928149486U, 5922766259533333176U, 13905974306208152023U, 15581499810137393099U, 16984899920938428497U, 3200603207280494362U, 7380999954652714080U, 12309868366858318294U, 14429727436216005299U, 2729787181478763922U, 16977038330684590647U, 18355554889446193926U, 17215062679767734078U, 13765200025381434216U, 10344783318856046900U},
		{9649735934438430274U, 3399138371047184399U, 398547652384713498U, 5380614692813128343U, 5411506409235652U, 269352180507144378U, 10455025401711960957U, 22238466909932841U, 1298765291149217147U, 9161446061732264458U, 1239012157003154588U, 15005633193548090046U, 14037255498647952574U, 18039232131292507005U, 16769083068199157833U, 14036176587091740987U, 16187922316611872964U}
	};

public:
	AGobangFunction();

	UFUNCTION(BlueprintCallable)
	void Initialize();

	UFUNCTION(BlueprintCallable)
	int32 GetTurn();

	UFUNCTION(BlueprintCallable)
	TArray<int32> GetBoard();

	stack<pair<int32, int32>> GetRecord();

	UFUNCTION(BlueprintCallable)
	void GetPrevPiece(int32& X, int32& Y);

	UFUNCTION(BlueprintCallable)
	int32 Check(int32 X, int32 Y);

	UFUNCTION(BlueprintCallable)
	int32 Drop(int32 X, int32 Y);

	UFUNCTION(BlueprintCallable)
	void Undo();

	UFUNCTION(BlueprintCallable)
	int32 Judge();

	UFUNCTION(BlueprintCallable)
	void GetWinningPos(int32& X1, int32& Y1, int32& X2, int32& Y2);

	UFUNCTION(BlueprintCallable)
	void Next(int32& X, int32& Y);

	UFUNCTION(BlueprintCallable)
	int32 GetNumOfPieces();

private:
	int32 AlphaBeta(int32, int32, int32, pair<int32, int32>* = nullptr);

	int32 EvaluateBoard();

	int32 EvaluatePoint(pair<int32, int32>);

	vector<int32> GetLine(int32, pair<int32, int32>);

	static int32 AnalysisLine(const vector<int32>&, int32);

	static int32 AnalysisPoint_My(const vector<int32>&, int32);

	static int32 AnalysisPoint_Adversary(const vector<int32>&, int32);

protected:
	virtual void BeginPlay() override;

public:
	virtual void Tick(float DeltaTime) override;
};
